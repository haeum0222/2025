import streamlit as st

# 1. MBTI별 적합 직업 데이터를 정의합니다. (예시 데이터)
# 실제 프로젝트에서는 더 많은 MBTI 유형과 다양한 직업을 추가하거나,
# 별도의 CSV, JSON 파일 등으로 데이터를 관리할 수 있습니다.
mbti_job_recommendations = {
    "ISTJ": [
        "회계사", "공무원", "데이터 분석가", "경찰관", "군인",
        "은행원", "교사 (행정 중시)", "엔지니어 (정확성 요구)"
    ],
    "ISFJ": [
        "간호사", "사회복지사", " "영양사", "보육교사", "상담사",
        "행정직원", "도서관 사서", "수의사"
    ],
    "INFJ": [
        "작가", "심리학자", "상담사", "교사", "성직자",
        "예술가", "NGO 활동가", "인사 담당자"
    ],
    "INTJ": [
        "과학자", "프로그래머", "건축가", "전략 기획가", "대학교수",
        "컨설턴트", "변호사", "연구원"
    ],
    "ISTP": [
        "기술자", "정비사", "소방관", "조종사", "요리사",
        "운동선수", "데이터 과학자", "IT 관리자"
    ],
    "ISFP": [
        "디자이너", "사진작가", "음악가", "예술가", "자유기고가",
        "패션 디자이너", "수공예가", "조경사"
    ],
    "INFP": [
        "작가", "예술가", "심리학자", "상담사", "교사",
        "사회복지사", "그래픽 디자이너", "HR 전문가"
    ],
    "INTP": [
        "과학자", "철학자", "프로그래머", "수학자", "연구원",
        "대학교수", "시스템 분석가", "개발자"
    ],
    "ESTP": [
        "사업가", "영업직", "경찰관", "소방관", "스포츠 에이전트",
        "응급구조사", "파일럿", "마케터"
    ],
    "ESFP": [
        "연예인", "이벤트 플래너", "유치원 교사", "서비스업", "관광 가이드",
        "레크리에이션 강사", "판매원", "사회자"
    ],
    "ENFP": [
        "마케터", "강사", "상담사", "광고 기획자", "크리에이터",
        "언론인", "심리학자", "여행 작가"
    ],
    "ENTP": [
        "기업가", "변호사", "발명가", "컨설턴트", "마케터",
        "벤처 투자가", "데이터 과학자", "엔지니어 (새로운 아이디어)"
    ],
    "ESTJ": [
        "관리자", "경영자", "변호사", "판사", "군 장교",
        "회계사", "세일즈 매니저", "프로젝트 매니저"
    ],
    "ESFJ": [
        "교사", "간호사", "사회복지사", "상담사", "인사 담당자",
        "병원 코디네이터", "이벤트 플래너", "주부 (직업 아님)" # 예시로 추가, 실제 직업은 아님.
    ],
    "ENFJ": [
        "교사", "상담사", "성직자", "리더십 트레이너", "인사 책임자",
        "정치인", "심리학자", "코치"
    ],
    "ENTJ": [
        "최고경영자(CEO)", "컨설턴트", "변호사", "정치인", "기업 전략가",
        "프로젝트 매니저", "대학교수", "사업 개발자"
    ]
}

# 2. Streamlit 앱의 타이틀과 설명 설정
st.title("💡 MBTI 기반 직업 추천 사이트")
st.write("당신의 MBTI를 선택하고, 어떤 직업이 잘 맞을지 알아보세요!")

# 3. 사용자로부터 MBTI 유형 선택 받기
# MBTI 유형 목록을 정렬하여 보여줍니다.
mbti_types = sorted(list(mbti_job_recommendations.keys()))
selected_mbti = st.selectbox(
    "당신의 MBTI 유형은 무엇인가요?",
    mbti_types,
    index=0 # 초기 선택값을 첫 번째 MBTI로 설정
)

# 4. 선택된 MBTI에 따른 직업 추천 결과 표시
if selected_mbti:
    st.subheader(f"✨ '{selected_mbti}' 유형에게 추천하는 직업")
    recommended_jobs = mbti_job_recommendations[selected_mbti]

    # 직업 목록을 예쁘게 보여주기 위해 마크다운 리스트 사용
    job_list_markdown = "\n".join([f"- {job}" for job in recommended_jobs])
    st.markdown(job_list_markdown)

    st.markdown("---")
    st.info(f"**{selected_mbti}** 유형은 다음과 같은 특징을 가집니다:")
    # 여기에 각 MBTI 유형별 특징 설명을 추가할 수 있습니다.
    # 예시:
    if selected_mbti == "ISTJ":
        st.write("책임감이 강하고 현실적이며 신뢰할 수 있습니다. 조직적이고 체계적인 것을 선호하며, 세부사항에 주의를 기울입니다.")
    elif selected_mbti == "ENFP":
        st.write("자유로운 영혼의 소유자로, 열정적이고 창의적이며 사회성이 좋습니다. 새로운 가능성을 탐색하고 사람들과 교류하는 것을 즐깁니다.")
    # 다른 MBTI 유형에 대한 설명도 여기에 추가하세요.
    else:
        st.write("각 MBTI 유형에 대한 상세 설명을 여기에 추가하여 사용자에게 더 풍부한 정보를 제공할 수 있습니다.")

st.markdown("---")
st.write("본 직업 추천은 일반적인 경향을 바탕으로 하며, 개인의 흥미와 능력에 따라 더 다양한 직업이 적합할 수 있습니다.")
